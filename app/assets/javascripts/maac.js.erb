
/*!
 * Modal As A Confirm (MAAC) 2.0.0.pre.alpha (2018-02-06 18:59:03 +0300)
 * https://github.com/igorakaamigo/maac
 * Released under the MIT license:
 * https://github.com/igorakaamigo/maac/blob/master/MIT-LICENSE
 */

(function() {
  this.Maac = (function() {
    function Maac() {}

    Maac.version = '2.0.0.pre.alpha';

    Maac.strings = <%= Maac.strings.to_json %>;

    Maac.template = <%= Maac.template.to_json %>;

    Maac.selector = <%= Maac.selector.to_json %>;

    Maac.selector_y = <%= Maac.selector_y.to_json %>;

    Maac.selector_n = <%= Maac.selector_n.to_json %>;

    Maac.after_append = <%= Maac.after_append %>;

    Maac.before_remove = <%= Maac.before_remove %>;

    Maac.show = function() {
      if (!document.querySelector(Maac.selector)) {
        document.body.innerHTML += Maac.html();
        return Maac.after_append();
      }
    };

    Maac.hide = function(confirmed) {
      return Maac.before_remove(function() {
        document.querySelector(Maac.selector).remove();
        if (confirmed) {
          Maac._link.removeAttribute('data-confirm');
          return Maac._link.click();
        }
      });
    };

    Maac.avalue = function(key) {
      if (key === 'text') {
        return Maac._link.getAttribute('data-confirm');
      } else {
        return Maac._link.getAttribute("data-confirm-" + key) || Maac.strings[key];
      }
    };

    Maac.html = function() {
      return Maac.template.replace(/%{(.*?)}/g, function(_, key) {
        return Maac.avalue(key);
      });
    };

    Maac.initialize = function() {
      Rails.delegate(document, 'a[data-confirm]', 'confirm', function() {
        Maac._link = this;
        Maac.show();
        return false;
      });
      Rails.delegate(document, Maac.selector_n, 'click', function(event) {
        Rails.stopEverything(event);
        return Maac.hide();
      });
      return Rails.delegate(document, Maac.selector_y, 'click', function(event) {
        Rails.stopEverything(event);
        return Maac.hide(true);
      });
    };

    return Maac;

  })();

  Maac.initialize();

}).call(this);
